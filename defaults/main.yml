
# file: monit/defaults/main.yml

iface: 'eth0'
mapped_interface_1: "{{hostvars[inventory_hostname]['ansible_' + iface]['ipv4']['address']}}"

#########################################
# M/Monit
#########################################
monit_notify_email: "monit@cognitivescale.com"

monit_logfile: "/var/log/monit.log"

monit_poll_period: 60
monit_poll_start_delay: 120

monit_eventqueue_directory: "/var/lib/monit/events"
monit_eventque_slots: 100

monit_mailformat_from: "monit@{{inventory_hostname}}"
monit_mailformat_subject: "$SERVICE $EVENT"
monit_mailformat_message: "Monit $ACTION $SERVICE at $DATE on $HOST: $DESCRIPTION."

monit_mailserver_host: "snmtp.gmail.com"
# monit_mailserver_port:
monit_mailserver_username:
# monit_mailserver_password:
# monit_mailserver_encryption:

# Keep this short for testing -> 60 for prod
monit_mailserver_timeout: 10

monit_port: 2812
monit_address: "{{mapped_interface_1}}"
monit_allow: [ 0.0.0.0/0.0.0.0, 'admin:monit', localhost, 10.0.0.0/8, 172.0.0.0/8, 192.0.0.0/8]
# monit_username:
# monit_password:
monit_ssl: no
monit_cert: "/etc/monit/monit.pem"

monit_monitors_sshd_port: 22

# Canonical service dictionary for templating monit conf files
# to be filled by calling role 
# service:
#  start_cmd:
#  stop_cmd:
#  pidfile:
#  # Domains our service must be able to hit, local or remote
#  domains:
#   - domain:
#     ports:
#      - port:
#      - protocol:
#  # Local ports our service should be listening/sending on
#  ports:
#   - port
#     type:
#     protocol:
#  check: